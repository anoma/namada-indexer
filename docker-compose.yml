x-defaults: &defaults
  restart: unless-stopped
  depends_on:
    postgres:
      condition: service_healthy
    dragonfly:
      condition: service_healthy
  build: &build
    context: .
    dockerfile: Dockerfile
  environment: &env-vars
    DATABASE_URL: ${DATABASE_URL:-postgres://postgres:${POSTGRES_PASSWORD:?}@postgres:5432/namada-indexer}
    TENDERMINT_URL: ${TENDERMINT_URL}
    CACHE_URL: ${CACHE_URL:-redis://dragonfly:6379}
  command: |
    ./service
  extra_hosts:
    - "host.docker.internal:host-gateway"

services:
  postgres:
    image: postgres:16-alpine
    command: [ "postgres", "-c", "max_connections=200" ]
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_DB: namada-indexer
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d namada-indexer" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    command: --logtostderr --cache_mode=true --port 6379 -dbnum 1
    ulimits:
      memlock: -1
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  chain:
    <<: *defaults
    image: namada/chain-indexer
    environment:
      <<: *env-vars
      INITIAL_QUERY_RETRY_TIME: ${INITIAL_QUERY_RETRY_TIME:-15}
    build:
      <<: *build
      args:
        PACKAGE: chain

  governance:
    <<: *defaults
    image: namada/governance-indexer
    build:
      <<: *build
      args:
        PACKAGE: governance

  pos:
    <<: *defaults
    image: namada/pos-indexer
    build:
      <<: *build
      args:
        PACKAGE: pos

  rewards:
    <<: *defaults
    image: namada/rewards-indexer
    build:
      <<: *build
      args:
        PACKAGE: rewards

  parameters:
    <<: *defaults
    image: namada/parameters-indexer
    build:
      <<: *build
      args:
        PACKAGE: parameters

  transactions:
    <<: *defaults
    image: namada/transaction-indexer
    build:
      <<: *build
      args:
        PACKAGE: transactions

  webserver:
    <<: *defaults
    image: namada/webserver-indexer
    build:
      <<: *build
      args:
        PACKAGE: webserver
    expose:
      - 5001
    ports:
      - ${WEBSERVER_HOST_IP:-127.0.0.1}:${WEBSERVER_PORT:-5001}:5001
    environment:
      <<: *env-vars
    healthcheck:
      test: curl --fail http://localhost:5001/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres-data:
